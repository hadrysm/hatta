{"version":3,"sources":["webpack:///./src/hooks/useFadeInAnimation.js","webpack:///./src/components/molecules/HeadlineContent/HeadlineContent.js","webpack:///./src/helpers/index.js","webpack:///./src/templates/GridTemplate/GridTemplate.js","webpack:///./src/pages/gallery.js"],"names":["useFadeInAnimation","startPosition","y","containerRef","useRef","useEffect","elements","current","children","tl","gsap","timeline","defaults","ease","duration","delay","set","autoAlpha","to","Object","entries","reduce","acc","key","stagger","Wrapper","styled","div","theme","mq","bigTablet","HeadlineContent","title","paragraph","container","node","textSplit","frag","header","text","from","textContent","split","document","createDocumentFragment","forEach","letter","i","span","createElement","style","length","appendChild","ref","Headline","Paragraph","GridTemplate","section","galleryHeadline","query","GalleryPage","edges","data","allFile","map","id","childImageSharp","fluid"],"mappings":"2FAAA,8DAGaA,EAAqB,SAACC,QAA+B,IAA/BA,MAAgB,CAAEC,GAAI,KACvD,IAAMC,EAAeC,iBAAO,MAuB5B,OAVAC,qBAAU,WACR,IAAMC,EAAWH,EAAaI,QAAQC,SAEhCC,EAAKC,IAAKC,SAAS,CAAEC,SAAU,CAAEC,KAAM,aAAcC,SAAU,IAAKC,MAAO,OAEjFL,IAAKM,IAAIV,EAAT,eAAqBW,UAAW,GAAMhB,IAEtCQ,EAAGS,GAAGZ,EAAN,eAAkBW,UAAW,GAjBNE,OAAOC,QAAQnB,GAAeoB,QAAO,SAACC,EAAD,GAAiB,IAAD,EAATC,EAAS,KAC1E,OAAO,OAAP,UACKD,IADL,MAEGC,GAAc,UAARA,EAAkB,EAAI,EAF/B,MAIC,IAYH,CAAwDC,QAAS,SAChE,CAACrB,IAEGA,I,2GCQHsB,EAAUC,UAAOC,IAAV,+EAAGD,CAAH,wGAKT,qBAAGE,MAAkBC,GAAGC,aAWbC,IAzCS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC1BC,EAAY9B,iBAAO,MAgBzB,OAdAC,qBAAU,WAAO,ICba8B,EAExBC,EAEAC,EDSU,EACSH,EAAU3B,QAAQC,SAAlC8B,EADO,KACCC,EADD,KAGH7B,IAAKC,SAAS,CAAEC,SAAU,CAAEC,KAAM,gBAE1C2B,KAAK,EClBoBL,EDkBFG,EChBtBF,EADkBD,EAAhBM,YACsBC,MAAM,IAE9BL,EAAOM,SAASC,yBACtBR,EAAUS,SAAQ,SAACC,EAAQC,GACzB,IAAMC,EAAOL,SAASM,cAAc,QACpCD,EAAKP,YAAcK,EACnBE,EAAKE,OAAsB,MAAXJ,EAAiB,mBAAqB,IAAtD,aACEV,EAAUe,OAASJ,GADrB,+CAGAV,EAAKe,YAAYJ,MAGnBb,EAAKM,YAAc,KACnBN,EAAKiB,YAAYf,GAEVF,EAAK3B,UDCyB+B,GAAO,CACxCzB,SAAU,GACVC,MAAO,EACPE,UAAW,EACXf,GAAI,GACJsB,QAAS,OAEV,CAACU,IAGF,kBAACT,EAAD,CAAS4B,IAAKnB,GACZ,kBAACoB,EAAA,EAAD,KAAWtB,GACX,kBAACuB,EAAA,EAAD,KAAYtB,M,kCE9BlB,IAEMuB,EAFN,UAEqB9B,QAAO+B,QAAV,mEAAG/B,CAAH,wHAQH8B,O,kCCVf,2IAYME,EACG,UADHA,EAGF,qGAuBSC,EAAK,YAkCHC,UAtDK,SAAC,GAId,IAFQC,EAET,EAHJC,KACEC,QAAWF,MAGPR,EAAMrD,cAEZ,OACE,oCACE,kBAAC,IAAD,CAAKgC,MAAM,YACX,kBAAC,IAAD,CAAiBA,MAAO0B,EAAuBzB,UAAWyB,IAC1D,kBAAC,IAAD,CAAcL,IAAKA,GAChBQ,EAAMG,KAAI,oBAAG7B,KAAQ8B,EAAX,EAAWA,GAAIC,EAAf,EAAeA,gBAAf,OACT,kBAAC,IAAD,CAAK3C,IAAK0C,EAAIE,MAAOD,EAAgBC","file":"component---src-pages-gallery-js-82d7a1479d45ae5f6e10.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport gsap from 'gsap';\r\n\r\nexport const useFadeInAnimation = (startPosition = { y: -20 }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  const getFinishPosition = () => {\r\n    const finishPosition = Object.entries(startPosition).reduce((acc, [key]) => {\r\n      return {\r\n        ...acc,\r\n        [key]: key === 'scale' ? 1 : 0,\r\n      };\r\n    }, {});\r\n\r\n    return finishPosition;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const elements = containerRef.current.children;\r\n\r\n    const tl = gsap.timeline({ defaults: { ease: 'power3.out', duration: 1.5, delay: 1.5 } });\r\n\r\n    gsap.set(elements, { autoAlpha: 0, ...startPosition });\r\n\r\n    tl.to(elements, { autoAlpha: 1, ...getFinishPosition(), stagger: 0.15 });\r\n  }, [containerRef]);\r\n\r\n  return containerRef;\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport gsap from 'gsap';\r\nimport styled from 'styled-components';\r\n\r\nimport Headline from 'components/atoms/Headline/Headline';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\n\r\nimport { splitTextToChars } from 'helpers';\r\n\r\nconst HeadlineContent = ({ title, paragraph }) => {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const [header, text] = container.current.children;\r\n\r\n    const tl = gsap.timeline({ defaults: { ease: 'power3.out' } });\r\n\r\n    tl.from([splitTextToChars(header), text], {\r\n      duration: 0.4,\r\n      delay: 1,\r\n      autoAlpha: 0,\r\n      y: -60,\r\n      stagger: 0.1,\r\n    });\r\n  }, [container]);\r\n\r\n  return (\r\n    <Wrapper ref={container}>\r\n      <Headline>{title}</Headline>\r\n      <Paragraph>{paragraph}</Paragraph>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 2rem auto 3rem;\r\n  text-align: center;\r\n  max-width: 40rem;\r\n\r\n  ${({ theme }) => theme.mq.bigTablet} {\r\n    text-align: left;\r\n    margin: 5.5rem 0 4rem;\r\n  }\r\n`;\r\n\r\nHeadlineContent.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  paragraph: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HeadlineContent;\r\n","export const splitTextToChars = node => {\r\n  const { textContent } = node;\r\n  const textSplit = textContent.split('');\r\n\r\n  const frag = document.createDocumentFragment();\r\n  textSplit.forEach((letter, i) => {\r\n    const span = document.createElement('span');\r\n    span.textContent = letter;\r\n    span.style = `${letter === ' ' ? 'min-width: 1rem;' : ''}z-index: ${\r\n      textSplit.length - i\r\n    }; position: relative; display: inline-block;`;\r\n    frag.appendChild(span);\r\n  });\r\n  // eslint-disable-next-line\r\n  node.textContent = null;\r\n  node.appendChild(frag);\r\n\r\n  return node.children;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst GridTemplate = styled.section`\r\n  margin: 1rem 0;\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n  gap: 1.5rem;\r\n`;\r\n\r\nexport default GridTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nimport GridTemplate from 'templates/GridTemplate/GridTemplate';\r\n\r\nimport SEO from 'components/utilities/SEO/SEO';\r\nimport HeadlineContent from 'components/molecules/HeadlineContent/HeadlineContent';\r\nimport { useFadeInAnimation } from 'hooks/useFadeInAnimation';\r\n\r\nconst galleryHeadline = {\r\n  title: 'gallery',\r\n  paragraph:\r\n    'While artists work from real to the abstract, architects must work from the abstract to the real. ',\r\n};\r\n\r\nconst GalleryPage = ({\r\n  data: {\r\n    allFile: { edges },\r\n  },\r\n}) => {\r\n  const ref = useFadeInAnimation();\r\n\r\n  return (\r\n    <>\r\n      <SEO title=\"Gallery\" />\r\n      <HeadlineContent title={galleryHeadline.title} paragraph={galleryHeadline.paragraph} />\r\n      <GridTemplate ref={ref}>\r\n        {edges.map(({ node: { id, childImageSharp } }) => (\r\n          <Img key={id} fluid={childImageSharp.fluid} />\r\n        ))}\r\n      </GridTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  {\r\n    allFile(filter: { absolutePath: { regex: \"/gallery/\" } }) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            fluid(maxWidth: 900, maxHeight: 600, quality: 100) {\r\n              ...GatsbyImageSharpFluid_tracedSVG\r\n            }\r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nGalleryPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allFile: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          childImageSharp: PropTypes.shape({\r\n            fluid: PropTypes.oneOfType([\r\n              PropTypes.shape({}),\r\n              PropTypes.arrayOf(PropTypes.shape({})),\r\n            ]),\r\n          }),\r\n        }),\r\n      ),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default GalleryPage;\r\n"],"sourceRoot":""}